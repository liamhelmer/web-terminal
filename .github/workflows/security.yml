name: Security Scanning

# Run daily security scans and on pull requests
on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggers

permissions:
  contents: read
  security-events: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # Rust security audits
  rust-audit:
    name: Rust Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@6d653acede28d24f02e3cd41383119e8b1b35921 # stable
        with:
          toolchain: stable

      - name: Run cargo audit
        uses: actions-rust-lang/audit@f891efb0d416ac3b07503d0e8b6aeae0b6d40641 # v1.0.1
        with:
          # Fail on security vulnerabilities
          ignore: RUSTSEC-0000-0000 # Add ignored advisories here

      - name: Run cargo deny
        uses: EmbarkStudios/cargo-deny-action@f2ba7abc2abebaf185c833c3961145a3c275caad # v1.6.2
        with:
          log-level: warn
          command: check
          arguments: --all-features

  # Frontend security audits
  frontend-audit:
    name: Frontend Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run pnpm audit
        working-directory: ./frontend
        run: |
          pnpm audit --audit-level=moderate || {
            echo "Security vulnerabilities found in frontend dependencies"
            pnpm audit --json > audit-results.json
            exit 1
          }

      - name: Upload audit results
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: frontend-audit-results
          path: frontend/audit-results.json
          retention-days: 30

  # OWASP ZAP security scanning
  owasp-zap:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@6d653acede28d24f02e3cd41383119e8b1b35921 # stable
        with:
          toolchain: stable

      - name: Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Build backend
        run: cargo build --release

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Build frontend
        working-directory: ./frontend
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      - name: Copy frontend assets
        run: |
          mkdir -p static
          cp -r frontend/dist/* static/

      - name: Start application
        run: |
          WEB_TERMINAL_PORT=8080 \
          WEB_TERMINAL_JWT_SECRET=test-secret \
          ./target/release/web-terminal start &
          echo $! > server.pid

          # Wait for server
          for i in {1..30}; do
            if curl -f http://localhost:8080/health > /dev/null 2>&1; then
              break
            fi
            sleep 1
          done

      - name: Run OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Stop application
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: Upload ZAP report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: zap-scan-report
          path: report_html.html
          retention-days: 30

  # Dependency review (only on PRs)
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Dependency Review
        uses: actions/dependency-review-action@56339e523c0409420f6c2c9a2f4292bbb3c07dd3 # v4.0.0
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0

  # CodeQL analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5
        with:
          languages: ${{ matrix.language }}
          queries: security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5
        with:
          category: "/language:${{ matrix.language }}"

  # Trivy container scanning
  trivy:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build Docker image
        run: docker build -t web-terminal:scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'web-terminal:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5
        with:
          sarif_file: 'trivy-results.sarif'

  # All security checks must pass
  security-success:
    name: Security Checks Success
    if: always()
    needs: [rust-audit, frontend-audit, owasp-zap, dependency-review, codeql, trivy]
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs
        run: |
          # Allow dependency-review to be skipped on non-PR events
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            # Remove dependency-review from checks
            needs_status="${{ toJSON(needs) }}"
            needs_status=$(echo "$needs_status" | jq 'del(.["dependency-review"])')
          else
            needs_status="${{ toJSON(needs) }}"
          fi

          if echo "$needs_status" | jq -e '.[] | select(.result == "failure" or .result == "cancelled")' > /dev/null; then
            echo "One or more security checks failed or were cancelled"
            exit 1
          fi
          echo "All security checks passed successfully"